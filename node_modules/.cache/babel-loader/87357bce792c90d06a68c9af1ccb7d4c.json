{"ast":null,"code":"import { createAsyncThunk, createReducer, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const postUserLoged = createAsyncThunk(\"userLoged\", user => {\n  return axios.post(`/api/auth/login`, user).then(res => {\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    return res.data;\n  });\n});\nexport const postUserRegister = createAsyncThunk(\"userRegister\", user => {\n  return axios.post(`/api/auth/register`, user).then(res => {\n    return res.data;\n  }).catch(err => {\n    console.log(err);\n  });\n});\nexport const sendLogoutRequest = createAsyncThunk(\"LOGOUT\", () => {\n  localStorage.removeItem(\"user\");\n  return axios.get(\"/api/auth/logout\").then(() => userLogout);\n});\nexport const getUsers = createAsyncThunk(\"users\", () => {\n  return axios.get(\"/api/users\").then(users => users);\n});\nexport const setUser = createAction(\"SET_USER\");\nconst reducerRegistration = createReducer({}, {\n  [setUser]: (state, action) => {\n    state.user = action.payload;\n  },\n  [postUserLoged.fulfilled]: (state, action) => {\n    state.user = action.payload;\n  },\n  [postUserLoged.rejected]: (state, action) => console.log(action),\n  [postUserRegister.fulfilled]: (state, action) => state = {},\n  [sendLogoutRequest.fulfilled]: (state, action) => state = {},\n  [getUsers.fulfilled]: (state, action) => {\n    state.users = action.payload;\n  }\n});\nexport default reducerRegistration;","map":{"version":3,"sources":["/home/marcelo/EJERCICIOS P5/26-checkpoint-OMDB/src/state/registration.js"],"names":["createAsyncThunk","createReducer","createAction","axios","postUserLoged","user","post","then","res","localStorage","setItem","JSON","stringify","data","postUserRegister","catch","err","console","log","sendLogoutRequest","removeItem","get","userLogout","getUsers","users","setUser","reducerRegistration","state","action","payload","fulfilled","rejected"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGJ,gBAAgB,CAAC,WAAD,EAAeK,IAAD,IAAU;AACnE,SAAOF,KAAK,CAACG,IAAN,CAAY,iBAAZ,EAA8BD,IAA9B,EAAoCE,IAApC,CAA0CC,GAAD,IAAS;AACvDC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,IAAnB,CAA7B;AACA,WAAOL,GAAG,CAACK,IAAX;AACD,GAHM,CAAP;AAID,CAL4C,CAAtC;AAOP,OAAO,MAAMC,gBAAgB,GAAGd,gBAAgB,CAAC,cAAD,EAAkBK,IAAD,IAAU;AACzE,SAAOF,KAAK,CAETG,IAFI,CAEE,oBAFF,EAEuBD,IAFvB,EAGJE,IAHI,CAGEC,GAAD,IAAS;AACb,WAAOA,GAAG,CAACK,IAAX;AACD,GALI,EAMJE,KANI,CAMGC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GARI,CAAP;AASD,CAV+C,CAAzC;AAYP,OAAO,MAAMG,iBAAiB,GAAGnB,gBAAgB,CAAC,QAAD,EAAW,MAAM;AAChES,EAAAA,YAAY,CAACW,UAAb,CAAwB,MAAxB;AACA,SAAOjB,KAAK,CAACkB,GAAN,CAAU,kBAAV,EAA8Bd,IAA9B,CAAmC,MAAMe,UAAzC,CAAP;AACD,CAHgD,CAA1C;AAKP,OAAO,MAAMC,QAAQ,GAAGvB,gBAAgB,CAAC,OAAD,EAAU,MAAM;AACtD,SAAOG,KAAK,CAACkB,GAAN,CAAU,YAAV,EAAwBd,IAAxB,CAA8BiB,KAAD,IAAWA,KAAxC,CAAP;AACD,CAFuC,CAAjC;AAIP,OAAO,MAAMC,OAAO,GAAGvB,YAAY,CAAC,UAAD,CAA5B;AAEP,MAAMwB,mBAAmB,GAAGzB,aAAa,CACvC,EADuC,EAEvC;AACE,GAACwB,OAAD,GAAW,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,IAAAA,KAAK,CAACtB,IAAN,GAAauB,MAAM,CAACC,OAApB;AACD,GAHH;AAIE,GAACzB,aAAa,CAAC0B,SAAf,GAA2B,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,IAAAA,KAAK,CAACtB,IAAN,GAAauB,MAAM,CAACC,OAApB;AACD,GANH;AAOE,GAACzB,aAAa,CAAC2B,QAAf,GAA0B,CAACJ,KAAD,EAAQC,MAAR,KAAmBX,OAAO,CAACC,GAAR,CAAYU,MAAZ,CAP/C;AAQE,GAACd,gBAAgB,CAACgB,SAAlB,GAA8B,CAACH,KAAD,EAAQC,MAAR,KAAoBD,KAAK,GAAG,EAR5D;AASE,GAACR,iBAAiB,CAACW,SAAnB,GAA+B,CAACH,KAAD,EAAQC,MAAR,KAAoBD,KAAK,GAAG,EAT7D;AAUE,GAACJ,QAAQ,CAACO,SAAV,GAAsB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACvCD,IAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACD;AAZH,CAFuC,CAAzC;AAkBA,eAAeH,mBAAf","sourcesContent":["import {\n  createAsyncThunk,\n  createReducer,\n  createAction,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const postUserLoged = createAsyncThunk(\"userLoged\", (user) => {\n  return axios.post(`/api/auth/login`, user).then((res) => {\n    localStorage.setItem(\"user\", JSON.stringify(res.data));\n    return res.data;\n  });\n});\n\nexport const postUserRegister = createAsyncThunk(\"userRegister\", (user) => {\n  return axios\n\n    .post(`/api/auth/register`, user)\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n});\n\nexport const sendLogoutRequest = createAsyncThunk(\"LOGOUT\", () => {\n  localStorage.removeItem(\"user\");\n  return axios.get(\"/api/auth/logout\").then(() => userLogout);\n});\n\nexport const getUsers = createAsyncThunk(\"users\", () => {\n  return axios.get(\"/api/users\").then((users) => users);\n});\n\nexport const setUser = createAction(\"SET_USER\");\n\nconst reducerRegistration = createReducer(\n  {},\n  {\n    [setUser]: (state, action) => {\n      state.user = action.payload;\n    },\n    [postUserLoged.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [postUserLoged.rejected]: (state, action) => console.log(action),\n    [postUserRegister.fulfilled]: (state, action) => (state = {}),\n    [sendLogoutRequest.fulfilled]: (state, action) => (state = {}),\n    [getUsers.fulfilled]: (state, action) => {\n      state.users = action.payload;\n    },\n  }\n);\n\nexport default reducerRegistration;\n"]},"metadata":{},"sourceType":"module"}